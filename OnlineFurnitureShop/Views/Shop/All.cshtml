@model AllShopQueryModel

@{
    ViewBag.Title = "All Items";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<form method="get">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Category"></label>
                <select asp-for="Category" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                                <option value="@category">@category</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="SubCategory"></label>
                <select asp-for="SubCategory" class="form-control">
                    <option value="">All</option>
                    @foreach (var subCategory in Model.SubCategories)
                    {
                        <option value="@subCategory">@subCategory</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Lowest price first</option>
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

@if (!Model.Items.Any())
{
                <h2 class="text-center">No items found by the given criteria!</h2>
}

<div class="row">
    @foreach (var house in Model.Items)
    {
                    <partial name="_ItemPartial" model="@house" />
    }
</div>


@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalItemsCount /
        Model.ItemsPerPage);
}

<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item">
            <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="Shop"
               asp-action="All"
               asp-route-currentPage="@previousPage"
               asp-route-searchTerm="@Model.SearchTerm">Previous</a>
        </li>
        @{
            var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
            !Model.Items.Any();
        }

        <li class="page-item">
            <a class="page-link" asp-controller="Shop"
               asp-action="All"
               asp-route-currentPage="@(Model.PageOne)">1</a>
        </li>
        <li class="page-item">
            <a class="page-link" asp-controller="Shop"
               asp-action="All"
               asp-route-currentPage="@(Model.PageOne + 1)">2</a>
        </li>
        <li class="page-item">
            <a class="page-link" asp-controller="Shop"
               asp-action="All"
               asp-route-currentPage="@(Model.PageOne + 2)">3</a>
        </li>
        <li class="page-item">
            <a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
               asp-controller="Shop"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-searchTerm="@Model.SearchTerm">Next</a>
        </li>
    </ul>
</nav>

